3. Use Axios in React with Promises

Use Axios in React with Promises and Error Handling

import { useState, useEffect } from "react";
import "./App.css";
import axios from "axios.jsx";

const App = () => {
  const [myData, setMyData] = useState([]);
  const [isError, setIsError] = useState("");

  // using Promises
  useEffect(() => {
    axios
      .get("https://jsonplaceholder.typicode.com/posts")
      .then((response) => setMyData(response.data))
      .catch((error) => setIsError(error.message));
  }, []);

//plz subscribe to thapa technical
  return (
    <>
      <h1>Axios Tutorial</h1>
      {isError !== "" && <h2>{isError}</h2>}

      <div className="grid">
        {myData.slice(0, 9).map((post) => {
          const { body, id, title } = post;
          return (
            <div key={id} className="card">
              <h2>{title.slice(0, 15).toUpperCase()}</h2>
              <p>{body.slice(0, 100)}</p>
            </div>
          );
        })}
      </div>
    </>
  );
};

export default App;


The best wat to write Axios in the react app is by creating an axios.js file adding the below code and then simply importing the axios from this file and passing only the string for which you want data.
import axios from "axios";